#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2024/01/20 17:59
# @Author  : shenglin.li
# @File    : data_binance_download.py
# @Software: PyCharm
import json
import os
import shutil
import uuid

import requests

PROJECT_PATH = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
KLINE_DATA = "download"


def download_binance_kline(symbol, interval, start_date, end_date):
    url = "https://www.binance.com/bapi/bigdata/v1/public/bigdata/finance/exchange/listDownloadData2"
    post = requests.post(url, data=json.dumps({
        "bizType": "FUTURES_UM",
        "productName": "klines",
        "symbolRequestItems": [{
            "endDay": end_date,
            "granularityList": [interval],
            "interval": "monthly",
            "startDay": start_date,
            "symbol": symbol
        }]
    }), headers={"Content-Type": "application/json"})
    item_list = post.json()["data"]["downloadItemList"]
    for item in item_list:
        content = requests.get(item["url"], stream=True)
        filename = os.path.join(KLINE_DATA, uuid.uuid4().hex, item["filename"])
        os.mkdir(os.path.dirname(filename))
        print(filename)
        with open(filename, "wb") as f:
            for d in content:
                f.write(d)
        unzip_file(filename)
        shutil.rmtree(os.path.dirname(filename))


def unzip_file(file_path):
    import zipfile
    with zipfile.ZipFile(file_path, 'r') as zip_ref:
        zip_ref.extractall(KLINE_DATA)


# def format_df(filename):
#     df = pd.read_csv(os.path.join(KLINE_DATA, filename), header=0,
#                      usecols=["open_time", "open", "high", "low", "close", "volume", "quote_volume", "ignore"],
#                      dtype={
#                          "open_time": int,
#                          "open": str,
#                          "high": str,
#                          "low": str,
#                          "close": str,
#                          "volume": str,
#                          "quote_volume": str,
#                          "ignore": int
#                      })
#     df = df[df.ignore == 0]
#     df.rename(columns={"open_time": "timestamp", "quote_volume": "amount"}, inplace=True)
#     df.drop("ignore", axis=1, inplace=True)
#     return df


# def store_to_h5(filename):
#     print("loading: ", filename)
#     df = format_df(filename)
#     rf = re.findall(r"^(.*?)-(.*?)-.*csv", filename, re.S)
#     hd_file = rf[0][1] + ".hdf5"
#     df["symbol"] = rf[0][0]
#     with pd.HDFStore(os.path.join(H5_DATA, hd_file)) as store:
#         store.append(rf[0][0], df,
#                      min_itemsize={"open": 10, "high": 10, "low": 10, "close": 10, "volume": 20, "amount": 20},
#                      format="table", data_columns=True, complib="blosc2", complevel=9)


if __name__ == '__main__':
    symbols = [
            "1000BONKUSDT",
            "1000BTTCUSDT",
            "1000FLOKIUSDT",
            "1000LUNCBUSD",
            "1000LUNCUSDT",
            "1000PEPEUSDT",
            "1000RATSUSDT",
            "1000SATSUSDT",
            "1000SHIBBUSD",
            "1000SHIBUSDT",
            "1000XECUSDT",
            "1INCHUSDT",
            "AAVEUSDT",
            "ACEUSDT",
            "ACHUSDT",
            "ADABUSD",
            "ADAUSDT",
            "AGIXBUSD",
            "AGIXUSDT",
            "AGLDUSDT",
            "AIUSDT",
            "AKROUSDT",
            "ALGOUSDT",
            "ALICEUSDT",
            "ALPHAUSDT",
            "AMBBUSD",
            "AMBUSDT",
            "ANCBUSD",
            "ANCUSDT",
            "ANKRUSDT",
            "ANTUSDT",
            "APEBUSD",
            "APEUSDT",
            "API3USDT",
            "APTBUSD",
            "APTUSDT",
            "ARBUSDT",
            "ARKMUSDT",
            "ARKUSDT",
            "ARPAUSDT",
            "ARUSDT",
            "ASTRUSDT",
            "ATAUSDT",
            "ATOMUSDT",
            "AUCTIONBUSD",
            "AUCTIONUSDT",
            "AUDIOUSDT",
            "AVAXBUSD",
            "AVAXUSDT",
            "AXSUSDT",
            "BADGERUSDT",
            "BAKEUSDT",
            "BALUSDT",
            "BANDUSDT",
            "BATUSDT",
            "BCHUSDT",
            "BEAMXUSDT",
            "BELUSDT",
            "BICOUSDT",
            "BIGTIMEUSDT",
            "BLUEBIRDUSDT",
            "BLURUSDT",
            "BLZUSDT",
            "BNBBUSD",
            "BNBUSDC",
            "BNBUSDT",
            "BNTUSDT",
            "BNXUSDT",
            "BNXUSDTSETTLED",
            "BONDUSDT",
            "BSVUSDT",
            "BTCBUSD",
            "BTCBUSD_210129",
            "BTCBUSD_210226",
            "BTCDOMUSDT",
            "BTCSTUSDT",
            "BTCUSDC",
            "BTCUSDT",
            "BTCUSDT_210326",
            "BTCUSDT_210625",
            "BTCUSDT_210924",
            "BTCUSDT_211231",
            "BTCUSDT_220325",
            "BTCUSDT_220624",
            "BTCUSDT_220930",
            "BTCUSDT_221230",
            "BTCUSDT_230331",
            "BTCUSDT_230630",
            "BTCUSDT_230929",
            "BTCUSDT_231229",
            "BTCUSDT_240329",
            "BTCUSDT_240628",
            "BTSUSDT",
            "BTTUSDT",
            "BZRXUSDT",
            "C98USDT",
            "CAKEUSDT",
            "CELOUSDT",
            "CELRUSDT",
            "CFXUSDT",
            "CHRUSDT",
            "CHZUSDT",
            "CKBUSDT",
            "COCOSUSDT",
            "COMBOUSDT",
            "COMPUSDT",
            "COTIUSDT",
            "CRVUSDT",
            "CTKUSDT",
            "CTSIUSDT",
            "CVCUSDT",
            "CVXBUSD",
            "CVXUSDT",
            "CYBERUSDT",
            "DARUSDT",
            "DASHUSDT",
            "DEFIUSDT",
            "DENTUSDT",
            "DGBUSDT",
            "DODOBUSD",
            "DODOUSDT",
            "DODOXUSDT",
            "DOGEBUSD",
            "DOGEUSDC",
            "DOGEUSDT",
            "DOTBUSD",
            "DOTECOUSDT",
            "DOTUSDT",
            "DUSKUSDT",
            "DYDXUSDT",
            "EDUUSDT",
            "EGLDUSDT",
            "ENJUSDT",
            "ENSUSDT",
            "EOSUSDT",
            "ETCBUSD",
            "ETCUSDT",
            "ETHBTC",
            "ETHBUSD",
            "ETHUSDC",
            "ETHUSDT",
            "ETHUSDT_210326",
            "ETHUSDT_210625",
            "ETHUSDT_210924",
            "ETHUSDT_211231",
            "ETHUSDT_220325",
            "ETHUSDT_220624",
            "ETHUSDT_220930",
            "ETHUSDT_221230",
            "ETHUSDT_230331",
            "ETHUSDT_230630",
            "ETHUSDT_230929",
            "ETHUSDT_231229",
            "ETHUSDT_240329",
            "ETHUSDT_240628",
            "ETHWUSDT",
            "FETUSDT",
            "FILBUSD",
            "FILUSDT",
            "FLMUSDT",
            "FLOWUSDT",
            "FOOTBALLUSDT",
            "FRONTUSDT",
            "FTMBUSD",
            "FTMUSDT",
            "FTTBUSD",
            "FTTUSDT",
            "FXSUSDT",
            "GALABUSD",
            "GALAUSDT",
            "GALBUSD",
            "GALUSDT",
            "GASUSDT",
            "GLMRUSDT",
            "GMTBUSD",
            "GMTUSDT",
            "GMXUSDT",
            "GRTUSDT",
            "GTCUSDT",
            "HBARUSDT",
            "HFTUSDT",
            "HIFIUSDT",
            "HIGHUSDT",
            "HNTUSDT",
            "HOOKUSDT",
            "HOTUSDT",
            "ICPBUSD",
            "ICPUSDT",
            "ICPUSDT_SETTLED",
            "ICXUSDT",
            "IDEXUSDT",
            "IDUSDT",
            "ILVUSDT",
            "IMXUSDT",
            "INJUSDT",
            "IOSTUSDT",
            "IOTAUSDT",
            "IOTXUSDT",
            "JASMYUSDT",
            "JOEUSDT",
            "JTOUSDT",
            "KASUSDT",
            "KAVAUSDT",
            "KEEPUSDT",
            "KEYUSDT",
            "KLAYUSDT",
            "KNCUSDT",
            "KSMUSDT",
            "LDOBUSD",
            "LDOUSDT",
            "LENDUSDT",
            "LEVERBUSD",
            "LEVERUSDT",
            "LINAUSDT",
            "LINKBUSD",
            "LINKUSDT",
            "LITUSDT",
            "LOOMUSDT",
            "LPTUSDT",
            "LQTYUSDT",
            "LRCUSDT",
            "LTCBUSD",
            "LTCUSDT",
            "LUNA2BUSD",
            "LUNA2USDT",
            "LUNABUSD",
            "LUNAUSDT",
            "MAGICUSDT",
            "MANAUSDT",
            "MANTAUSDT",
            "MASKUSDT",
            "MATICBUSD",
            "MATICUSDT",
            "MAVUSDT",
            "MBLUSDT",
            "MDTUSDT",
            "MEMEUSDT",
            "MINAUSDT",
            "MINAUSDTSETTLED",
            "MKRUSDT",
            "MOVRUSDT",
            "MTLUSDT",
            "NEARBUSD",
            "NEARUSDT",
            "NEOUSDT",
            "NFPUSDT",
            "NKNUSDT",
            "NMRUSDT",
            "NTRNUSDT",
            "NUUSDT",
            "OCEANUSDT",
            "OGNUSDT",
            "OMGUSDT",
            "ONEUSDT",
            "ONGUSDT",
            "ONTUSDT",
            "OPUSDT",
            "ORBSUSDT",
            "ORDIUSDT",
            "OXTUSDT",
            "PENDLEUSDT",
            "PEOPLEUSDT",
            "PERPUSDT",
            "PHBBUSD",
            "PHBUSDT",
            "POLYXUSDT",
            "POWRUSDT",
            "PYTHUSDT",
            "QNTUSDT",
            "QTUMUSDT",
            "RADUSDT",
            "RAYUSDT",
            "RDNTUSDT",
            "REEFUSDT",
            "RENUSDT",
            "RIFUSDT",
            "RLCUSDT",
            "RNDRUSDT",
            "ROSEUSDT",
            "RSRUSDT",
            "RUNEUSDT",
            "RVNUSDT",
            "SANDBUSD",
            "SANDUSDT",
            "SCUSDT",
            "SEIUSDT",
            "SFPUSDT",
            "SKLUSDT",
            "SLPUSDT",
            "SNTUSDT",
            "SNXUSDT",
            "SOLBUSD",
            "SOLUSDC",
            "SOLUSDT",
            "SPELLUSDT",
            "SRMUSDT",
            "SSVUSDT",
            "STEEMUSDT",
            "STGUSDT",
            "STMXUSDT",
            "STORJUSDT",
            "STPTUSDT",
            "STRAXUSDT",
            "STXUSDT",
            "SUIUSDT",
            "SUPERUSDT",
            "SUSHIUSDT",
            "SXPUSDT",
            "THETAUSDT",
            "TIAUSDT",
            "TLMBUSD",
            "TLMUSDT",
            "TLMUSDTSETTLED",
            "TOKENUSDT",
            "TOMOUSDT",
            "TRBUSDT",
            "TRUUSDT",
            "TRXBUSD",
            "TRXUSDT",
            "TUSDT",
            "TWTUSDT",
            "UMAUSDT",
            "UNFIUSDT",
            "UNIBUSD",
            "UNIUSDT",
            "USDCUSDT",
            "USTCUSDT",
            "VETUSDT",
            "WAVESBUSD",
            "WAVESUSDT",
            "WAXPUSDT",
            "WIFUSDT",
            "WLDUSDT",
            "WOOUSDT",
            "XAIUSDT",
            "XEMUSDT",
            "XLMUSDT",
            "XMRUSDT",
            "XRPBUSD",
            "XRPUSDC",
            "XRPUSDT",
            "XTZUSDT",
            "XVGUSDT",
            "XVSUSDT",
            "YFIIUSDT",
            "YFIUSDT",
            "YGGUSDT",
            "ZECUSDT",
            "ZENUSDT",
            "ZILUSDT",
            "ZRXUSDT"
        ]
    intervals = ["1h", "4h", "1m", "3m", "5m", "15m", "30m", "1d"]

    # listdir = os.listdir(H5_DATA)
    # for filename in listdir:
    #     os.remove(os.path.join(H5_DATA, filename))

    # listdir = os.listdir(KLINE_DATA)
    # for filename in listdir:
    #     os.remove(os.path.join(KLINE_DATA, filename))
    for symbol in symbols:
        if not symbol.endswith("USDT"):
                continue
        for interval in intervals:
            download_binance_kline(symbol, interval, "2022-01-01", "2024-01-01")
    # listdir = os.listdir(KLINE_DATA)
    # for filename in listdir:
    #     store_to_h5(filename)
    #     os.remove(os.path.join(KLINE_DATA, filename))
